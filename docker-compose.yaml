
services:
  postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "course"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "user"
    ports:
      - "5444:5432"
    networks:
      - gringots_network

  postgres-backup:
    image: postgres:13.3
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "user"
      POSTGRES_DB: "course"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - pg_backups:/backups
    entrypoint: >
      bash -c "while true; do
        PGPASSWORD=user pg_dump -h postgres -p 5432 -U user -d course -F c -b -v -f /backups/course_backup_$(date +\%Y-\%m-\%d_\%H-\%M-\%S).dump;
        sleep 90000;
      done"
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - gringots_network

  keycloak-postgres:
    image: library/postgres:${KC_POSTGRES_IMAGE_TAG:-14}
    container_name: ${POSTGRES_CONTAINER_NAME:-postgres}
    restart: on-failure
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: psql_keycloak
    ports:
      - ${KC_POSTGRES_PORT_MAPPING:-5435}:5432
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - gringots_network

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.2
    container_name: keycloak
    command:
      - start-dev --auto-build --db postgres --hostname-strict-https false --hostname-strict false --proxy edge --http-enabled true --import-realm
    environment:
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/psql_keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_DB_SCHEMA: public
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - keycloak_data:/opt/keycloak/data/
      # - ./keycloak-theme/keycloakify-starter/dist_keycloak/keycloak-theme-for-kc-all-other-versions.jar:/opt/keycloak/providers/keycloak-theme-for-kc-all-other-versions.jar
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - "8282:8080"
    depends_on:
      - keycloak-postgres
    networks:
      - gringots_network

  ai:
    build:
      context: /Users/jaba/Documents/life/ITMO/IS/курсач/front-back/back/gringots/AI
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      pg_uri: "postgresql://ai:user@pg_ai:5432/course"
    depends_on:
      - pg_ai
    networks:
      - gringots_network
  pg_ai:
    image: postgres:13.3
    restart: unless-stopped
    environment:
      POSTGRES_USER: "ai"
      POSTGRES_PASSWORD: "user"
      POSTGRES_DB: "course"
    ports:
      - "3686:5432"
    volumes:
      - pg_ai_data:/var/lib/postgresql/data
    networks:
      - gringots_network


  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:user@postgres:5432/course?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    networks:
      - gringots_network

  keycloak-postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:admin@keycloak-postgres:5432/psql_keycloak?sslmode=disable"
    ports:
      - "9188:9187"
    depends_on:
      - keycloak-postgres
    networks:
      - gringots_network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      - postgres-exporter
      - keycloak-postgres-exporter
    networks:
      - gringots_network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - gringots_network

volumes:
  keycloak_data:
  pg_data:
  pg_backups:
  grafana_data:
  pg_ai_data:


networks:
  gringots_network:
    driver: bridge